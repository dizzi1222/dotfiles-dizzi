-- üêêüó£Ô∏èüî•Ô∏è‚úçÔ∏è NO REQUIERE API  USA : Copilot auth
--
-- PARA QUE FUNCIONE DEBES DE ELIMINAR CMP.lua
--
-- PARA ACTIVAR CIERTAS IAS NECESITAS MODIFICAR CIERTOS ARCHIVOS
-- Entre ellos:
--   - plugins/init.lua
--   - plugins/disabled.lua
--   - .config/lazy.lua
-- Y LOS RESPECTOS ARCHIVOS DE CONFIGURACION dE IA [copilot, claude-code.lua etc]
--   - .config/nvim/lua/plugins/copilot.lua [opcional usa copilot-chat.lua]
--   - .config/nvim/lua/plugins/supermaven.lua {etc..}
--
-- OBVIAMENTE REVISA LOS KEYMAPS: config/keymaps.lua--
--
--
-- This file contains the configuration for integrating GitHub Copilot and Copilot Chat plugins in Neovim.

-- Define prompts for Copilot
-- This table contains various prompts that can be used to interact with Copilot.
local prompts = {
  Commit = "Por favor genera un mensaje de commit para el siguiente c√≥digo. Escribe un mensaje de commit para el cambio, siguiendo la convenci√≥n de Commitizen. Mant√©nlo simple...", -- Solicitud para generar un mensaje de commit
  Explain = "Por favor explica c√≥mo funciona el siguiente c√≥digo.", -- Solicitud para explicar el c√≥digo                                                                                                       -- Prompt to improve wording
  Review = "Por favor revisa el siguiente c√≥digo y proporciona sugerencias para mejorarlo.", -- Solicitud para revisar el c√≥digo
  Tests = "Por favor explica c√≥mo funciona el c√≥digo seleccionado y luego genera pruebas unitarias para √©l.", -- Solicitud para generar pruebas unitarias
  Refactor = "Por favor refactoriza el siguiente c√≥digo para mejorar su claridad y legibilidad.", -- Solicitud para refactorizar el c√≥digo
  FixCode = "Por favor corrige el siguiente c√≥digo para que funcione como se espera.", -- Solicitud para corregir el c√≥digo
  FixError = "Por favor explica el error en el siguiente texto y proporciona una soluci√≥n.", -- Solicitud para corregir errores
  Optimize = "OPTIMIZA el siguiente c√≥digo para mejorar claridad y legibilidad", -- Solicitud para optimizar el c√≥digo
  BetterNamings = "Por favor proporciona mejores nombres para las siguientes variables y funciones.", -- Solicitud para sugerir mejores nombres
  Documentation = "Por favor proporciona documentaci√≥n para el siguiente c√≥digo.", -- Solicitud para generar documentaci√≥n
  JsDocs = "Por favor proporciona JsDocs para el siguiente c√≥digo.", -- Solicitud para generar JsDocs
  DocumentationForGithub = "Por favor proporciona documentaci√≥n para el siguiente c√≥digo lista para GitHub usando markdown.", -- Solicitud para generar documentaci√≥n para GitHub
  CreateAPost = "Por favor proporciona documentaci√≥n para el siguiente c√≥digo para publicarlo en redes sociales, como Linkedin. Debe ser profunda, bien explicada y f√°cil de entender. Hazlo tambi√©n de manera divertida y atractiva.", -- Solicitud para crear una publicaci√≥n en redes sociales
  SwaggerApiDocs = "Por favor proporciona documentaci√≥n para la siguiente API usando Swagger.", -- Solicitud para generar documentaci√≥n Swagger
  SwaggerJsDocs = "Por favor escribe JSDoc para la siguiente API usando Swagger.", -- Solicitud para generar Swagger JsDocs
  Summarize = "Por favor resume el siguiente texto.", -- Solicitud para resumir texto
  Spelling = "Por favor corrige cualquier error gramatical y de ortograf√≠a en el siguiente texto.", -- Solicitud para corregir ortograf√≠a y gram√°tica
  Wording = "Por favor mejora la gram√°tica y redacci√≥n del siguiente texto.", -- Solicitud para mejorar redacci√≥n
  Concise = "Por favor, reescribe el siguiente texto para que sea m√°s conciso.", -- Solicitud para hacer el texto m√°s conciso                                                                                                                                 -- Solicitud para hacer el texto m√°s conciso
}

-- Plugin configuration
-- This table contains the configuration for various plugins used in Neovim.
return {
  {
    -- Copilot Chat plugin configuration
    "CopilotC-Nvim/CopilotChat.nvim",
    branch = "main",
    cmd = "CopilotChat",
    opts = {
      prompts = prompts,
      system_prompt = "Este GPT es un clon del usuario, un arquitecto l√≠der frontend especializado en Angular y React, con experiencia en arquitectura limpia, arquitectura hexagonal y separaci√≥n de l√≥gica en aplicaciones escalables. Tiene un enfoque t√©cnico pero pr√°ctico, con explicaciones claras y aplicables, siempre con ejemplos √∫tiles para desarrolladores con conocimientos intermedios y avanzados.\n\nHabla con un tono profesional pero cercano, relajado y con un toque de humor inteligente. Evita formalidades excesivas y usa un lenguaje directo, t√©cnico cuando es necesario, pero accesible. Su estilo es argentino, sin caer en clich√©s, y utiliza expresiones como ‚Äúbuenas ac√° estamos‚Äù o ‚Äúdale que va‚Äù seg√∫n el contexto.\n\nSus principales √°reas de conocimiento incluyen:\n- Desarrollo frontend con Angular, React y gesti√≥n de estado avanzada (Redux, Signals, State Managers propios como Gentleman State Manager y GPX-Store).\n- Arquitectura de software con enfoque en Clean Architecture, Hexagonal Architecure y Scream Architecture.\n- Implementaci√≥n de buenas pr√°cticas en TypeScript, testing unitario y end-to-end.\n- Loco por la modularizaci√≥n, atomic design y el patr√≥n contenedor presentacional \n- Herramientas de productividad como LazyVim, Tmux, Zellij, OBS y Stream Deck.\n- Mentor√≠a y ense√±anza de conceptos avanzados de forma clara y efectiva.\n- Liderazgo de comunidades y creaci√≥n de contenido en YouTube, Twitch y Discord.\n\nA la hora de explicar un concepto t√©cnico:\n1. Explica el problema que el usuario enfrenta.\n2. Propone una soluci√≥n clara y directa, con ejemplos si aplica.\n3. Menciona herramientas o recursos que pueden ayudar.\n\nSi el tema es complejo, usa analog√≠as pr√°cticas, especialmente relacionadas con construcci√≥n y arquitectura. Si menciona una herramienta o concepto, explica su utilidad y c√≥mo aplicarlo sin redundancias.\n\nAdem√°s, tiene experiencia en charlas t√©cnicas y generaci√≥n de contenido. Puede hablar sobre la importancia de la introspecci√≥n, c√≥mo balancear liderazgo y comunidad, y c√≥mo mantenerse actualizado en tecnolog√≠a mientras se experimenta con nuevas herramientas. Su estilo de comunicaci√≥n es directo, pragm√°tico y sin rodeos, pero siempre accesible y ameno.\n\nEsta es una transcripci√≥n de uno de sus v√≠deos para que veas como habla:\n\nLe estaba contando la otra vez que ten√≠a una condici√≥n Que es de adulto altamente calificado no s√© si lo conocen pero no es bueno el oto lo est√° hablando con mi mujer y y a m√≠ cuando yo era chico mi mam√° me lo dijo en su momento que a m√≠ me hab√≠an encontrado una condici√≥n Que ti un iq muy elevado cuando era muy chico eh pero muy elevado a nivel de que estaba 5 a√±os o 6 a√±os por delante de un ni√±o",
      model = "claude-3.5-sonnet",
      answer_header = "Û±óû  The Gentleman Û±óû  ",
      auto_insert_mode = true,
      window = {
        layout = "vertical", -- [opcional de dizzi] Cambiar a "horizontal" si prefieres la ventana horizontal
        position = "left", -- [opcional de dizzi] Agregar esta l√≠nea para que aparezca a la izquierda
        width = 0.4, -- [opcional de dizzi]
        border = "rounded", -- [opcional de dizzi]
        relative = "editor", -- [opcional de dizzi]
      },
      mappings = {
        complete = {
          insert = "<Tab>",
        },
        close = {
          normal = "q",
          insert = "<C-c>",
        },
        reset = {
          normal = "<C-l>",
          insert = "<C-l>",
        },
        submit_prompt = {
          normal = "<CR>",
          insert = "<C-s>",
        },
        toggle_sticky = {
          normal = "grr",
        },
        clear_stickies = {
          normal = "grx",
        },
        accept_diff = {
          normal = "<C-y>",
          insert = "<C-y>",
        },
        jump_to_diff = {
          normal = "gj",
        },
        quickfix_answers = {
          normal = "gqa",
        },
        quickfix_diffs = {
          normal = "gqd",
        },
        yank_diff = {
          normal = "gy",
          register = '"', -- Default register to use for yanking
        },
        show_diff = {
          normal = "gd",
          full_diff = false, -- Show full diff instead of unified diff when showing diff window
        },
        show_info = {
          normal = "gi",
        },
        show_context = {
          normal = "gc",
        },
        show_help = {
          normal = "gh",
        },
      },
    },
    config = function(_, opts)
      local chat = require("CopilotChat")

      vim.api.nvim_create_autocmd("BufEnter", {
        pattern = "copilot-chat",
        callback = function()
          vim.opt_local.relativenumber = true
          vim.opt_local.number = false
        end,
      })

      chat.setup(opts)
    end,
  },
  -- Blink integration
  {
    "saghen/blink.cmp",
    optional = true,
    ---@module 'blink.cmp'
    ---@type blink.cmp.Config
    opts = {
      sources = {
        providers = {
          path = {
            -- Path sources triggered by "/" interfere with CopilotChat commands
            enabled = function()
              return vim.bo.filetype ~= "copilot-chat"
            end,
          },
        },
      },
    },
  },
}
